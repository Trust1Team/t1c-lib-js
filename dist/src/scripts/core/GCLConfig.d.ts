import { Pkcs11ModuleConfig } from '../plugins/smartcards/pkcs11/pkcs11Model';
import { T1CContainer } from './service/CoreModel';
declare class GCLConfig {
    private _gwUrl;
    private _gclUrl;
    private _dsContextPath;
    private _dsFileContextPath;
    private _ocvContextPath;
    private _apiKey;
    private _gwJwt;
    private _gclJwt;
    private _citrix;
    private _agentPort;
    private _implicitDownload;
    private _localTestMode;
    private _forceHardwarePinpad;
    private _defaultSessionTimeout;
    private _tokenCompatible;
    private _v2Compatible;
    private _defaultConsentDuration;
    private _defaultConsentTimeout;
    private _syncManaged;
    private _pkcs11Config;
    private _osPinDialog;
    private _containerDownloadTimeout;
    private _contextToken;
    private _lang;
    private _overrideContainers;
    private _containers;
    constructor(options?: any);
    readonly authUrl: string;
    readonly ocvUrl: string;
    ocvContextPath: string;
    gclUrl: string;
    readonly dsUrl: string;
    dsContextPath: string;
    dsFileContextPath: string;
    apiKey: string;
    citrix: boolean;
    agentPort: number;
    implicitDownload: boolean;
    readonly dsFileDownloadUrl: string;
    gwUrl: string;
    localTestMode: boolean;
    forceHardwarePinpad: boolean;
    defaultSessionTimeout: number;
    tokenCompatible: boolean;
    v2Compatible: boolean;
    defaultConsentDuration: number;
    defaultConsentTimeout: number;
    syncManaged: boolean;
    pkcs11Config: Pkcs11ModuleConfig;
    osPinDialog: boolean;
    containerDownloadTimeout: number;
    readonly gwJwt: Promise<string>;
    contextToken: string;
    gclJwt: string;
    lang: string;
    overrideContainers: T1CContainer[];
    containers: Map<string, string[]>;
    getGwJwt(): Promise<string>;
}
export { GCLConfig };
